{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/join.jsx","components/footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","href","Header","bg","zIndex","position","top","color","data","title","subtitle","paragraph","initialState","name","email","message","Join","useState","setState","handleChange","e","target","value","prevState","validate","onSubmit","preventDefault","console","log","emailjs","sendForm","then","result","text","window","open","error","alert","placeholder","required","onChange","Footer","rel","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d7e4b94b.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='#page-top'>\n            Treinamento em LGPD\n          </a>{' '}\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n  \n            <li>\n              <a href='#join' className='page-scroll'>\n                Inscreva-se\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","import ParticlesBg from \"particles-bg\";\n\nexport const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <ParticlesBg type=\"circle\" bg={{zIndex: 0, position:\"absolute\", top:0}} color={[\"#55CDFC\", \"#55CDFC\", \"#FFFFFF\", \"#F7A8B8\", \"#F7A8B8\"]}/>\n        <div className='overlay'>\n          <div className='container'>\n          \n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <h2>\n                  {props.data ? props.data.subtitle : 'Loading'}\n                  <span></span>\n                </h2>\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                <a\n                  href='#join'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Inscreva-se\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","import { useState } from 'react'\r\nimport emailjs from 'emailjs-com'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  email: '',\r\n  message: '',\r\n}\r\nexport const Join = (props) => {\r\n  const [{ name, email, message }, setState] = useState(initialState)\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setState((prevState) => ({ ...prevState, [name]: value }))\r\n  }\r\n  const clearState = () => setState({ ...initialState })\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(name, email, message)\r\n    emailjs\r\n      .sendForm(\r\n        'service_ucfn33t', 'template_j96r06f', e.target, 'user_pRDu9WW2WtncTMklajrID'\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text)\r\n          clearState()\r\n          window.open(\"/confirmacao\");\r\n        },\r\n        (error) => {\r\n          console.log(error.text)\r\n          alert('Ocorreu um erro. Tente novamente mais tarde')\r\n        }\r\n      )\r\n  }\r\n  return (\r\n    <div>\r\n      <div id='join'>\r\n        <div className='container'>\r\n          <div className='col-md-12'>\r\n            <div className='row'>\r\n              <div className='section-title'>\r\n                <h2>Inscreva-se</h2>\r\n                <p>\r\n                  Por favor, preencha TODOS os campos do formulário abaixo para realizar sua inscrição.\r\n                </p>\r\n              </div>\r\n              <form name='sentMessage' validate='true' onSubmit={handleSubmit}>\r\n                <div className='row'>\r\n                  <div className='col-md-6'>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='text'\r\n                        id='name'\r\n                        name='name'\r\n                        className='form-control'\r\n                        placeholder='Nome Social'\r\n                        required\r\n                        onChange={handleChange}\r\n                      />\r\n                      <p className='help-block text-danger'></p>\r\n                    </div>\r\n                  </div>\r\n                  <div className='col-md-6'>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='email'\r\n                        id='email'\r\n                        name='email'\r\n                        className='form-control'\r\n                        placeholder='Email'\r\n                        required\r\n                        onChange={handleChange}\r\n                      />\r\n                      <p className='help-block text-danger'></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='row'>\r\n                  <div className='col-md-6'>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='text'\r\n                        id='phone'\r\n                        name='phone'\r\n                        className='form-control'\r\n                        placeholder='Telefone (Whatsapp)'\r\n                        required\r\n                        onChange={handleChange}\r\n                      />\r\n                      <p className='help-block text-danger'></p>\r\n                    </div>\r\n                  </div>\r\n                  <div className='col-md-6'>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='text'\r\n                        id='cpf'\r\n                        name='cpf'\r\n                        className='form-control'\r\n                        placeholder='CPF'\r\n                        required\r\n                        onChange={handleChange}\r\n                      />\r\n                      <p className='help-block text-danger'></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                   <div className='row'>\r\n                  <div className='col-md-6'>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='text'\r\n                        id='escolaridade'\r\n                        name='escolaridade'\r\n                        className='form-control'\r\n                        placeholder='Escolaridade'\r\n                        required\r\n                        onChange={handleChange}\r\n                      />\r\n                      <p className='help-block text-danger'></p>\r\n                    </div>\r\n                  </div>\r\n                  <div className='col-md-6'>\r\n                    <div className='form-group'>\r\n                      <input\r\n                        type='text'\r\n                        id='profissao'\r\n                        name='profissao'\r\n                        className='form-control'\r\n                        placeholder='Profissão'\r\n                        required\r\n                        onChange={handleChange}\r\n                      />\r\n                      <p className='help-block text-danger'></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div id='success'></div>\r\n                <button type='submit' className='btn btn-custom btn-lg'>\r\n                  Enviar Inscrição\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","export const Footer = (props) => {\n  \n  return (\n    <div>\n      <div id='footer'>\n        <div className='container text-center'>\n          <p>\n            &copy; 2020 Issaaf Kattan React Land Page Template. Design by{' '}\n            <a href='http://www.templatewire.com' rel='nofollow'>\n              TemplateWire\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { Navigation } from './components/navigation'\nimport { Header } from './components/header'\n//import { Features } from './components/features'\n//import { About } from './components/about'\n// import { Services } from './components/services'\n// import { Gallery } from './components/gallery'\n// import { Testimonials } from './components/testimonials'\nimport { Join } from './components/join'\nimport { Footer } from './components/footer'\nimport JsonData from './data/data.json'\nimport SmoothScroll from 'smooth-scroll'\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n})\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({})\n  useEffect(() => {\n    setLandingPageData(JsonData)\n  }, [])\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <Join data={landingPageData.Join} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}